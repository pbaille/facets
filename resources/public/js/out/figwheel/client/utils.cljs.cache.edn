{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name figwheel.client.utils, :imports {}, :requires {string clojure.string, clojure.string clojure.string, product goog.userAgent.product, goog.userAgent.product goog.userAgent.product}, :uses nil, :defs {base-url-path {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 16, :column 7, :end-line 16, :end-column 20, :arglists (quote ([]))}, :name figwheel.client.utils/base-url-path, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, log {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 44, :column 7, :end-line 44, :end-column 10, :arglists (quote ([x] [level arg])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [level arg]), :arglists ([x] [level arg]), :arglists-meta (nil nil)}}, :name figwheel.client.utils/log, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [level arg]), :arglists ([x] [level arg]), :arglists-meta (nil nil)}, :method-params ([x] [level arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists ([x] [level arg])}, create-custom-event {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 19, :column 7, :end-line 19, :end-column 26, :arglists (quote ([event-name data]))}, :name figwheel.client.utils/create-custom-event, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 26, :method-params ([event-name data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-name data]))}, host-env? {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([]))}, :name figwheel.client.utils/host-env?, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, node-env? {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 12, :column 7, :end-line 12, :end-column 16, :arglists (quote ([]))}, :name figwheel.client.utils/node-env?, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, html-env? {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([]))}, :name figwheel.client.utils/html-env?, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *print-debug* {:name figwheel.client.utils/*print-debug*, :file "resources/public/js/out/figwheel/client/utils.cljs", :line 8, :column 1, :end-line 8, :end-column 29, :dynamic true, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 8, :column 16, :end-line 8, :end-column 29, :dynamic true}}, dispatch-custom-event {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 31, :column 7, :end-line 31, :end-column 28, :arglists (quote ([event-name data]))}, :name figwheel.client.utils/dispatch-custom-event, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 28, :method-params ([event-name data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-name data]))}, debug-prn {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 36, :column 7, :end-line 36, :end-column 16, :arglists (quote ([o]))}, :name figwheel.client.utils/debug-prn, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, eval-helper {:protocol-inline nil, :meta {:file "/Users/pierrebaille/Code/Libs/facets/resources/public/js/out/figwheel/client/utils.cljs", :line 54, :column 7, :end-line 54, :end-column 18, :arglists (quote ([code {:keys [eval-fn], :as opts}]))}, :name figwheel.client.utils/eval-helper, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 18, :method-params ([code p__34024]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([code {:keys [eval-fn], :as opts}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:warn :debug :node :info :error :eval-fn :html}, :order [:node :html :info :warn :debug :error :eval-fn]}, :doc nil}